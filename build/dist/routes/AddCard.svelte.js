/* src/routes/AddCard.svelte generated by Svelte v3.31.2 */
import {
	SvelteComponent,
	attr,
	component_subscribe,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	run_all,
	safe_not_equal,
	set_input_value,
	set_store_value,
	space
} from "../../_snowpack/pkg/svelte/internal.js";

import { Card, boxes } from "../services/cards.js";

function create_fragment(ctx) {
	let h1;
	let t1;
	let input0;
	let t2;
	let br0;
	let t3;
	let input1;
	let t4;
	let br1;
	let t5;
	let button;
	let mounted;
	let dispose;

	return {
		c() {
			h1 = element("h1");
			h1.textContent = "Add a card";
			t1 = space();
			input0 = element("input");
			t2 = space();
			br0 = element("br");
			t3 = space();
			input1 = element("input");
			t4 = space();
			br1 = element("br");
			t5 = space();
			button = element("button");
			button.textContent = "Add card";
			attr(input0, "type", "text");
			attr(input0, "placeholder", "front");
			attr(input1, "type", "text");
			attr(input1, "placeholder", "back");
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t1, anchor);
			insert(target, input0, anchor);
			set_input_value(input0, /*front*/ ctx[0]);
			insert(target, t2, anchor);
			insert(target, br0, anchor);
			insert(target, t3, anchor);
			insert(target, input1, anchor);
			set_input_value(input1, /*back*/ ctx[1]);
			insert(target, t4, anchor);
			insert(target, br1, anchor);
			insert(target, t5, anchor);
			insert(target, button, anchor);

			if (!mounted) {
				dispose = [
					listen(input0, "input", /*input0_input_handler*/ ctx[3]),
					listen(input1, "input", /*input1_input_handler*/ ctx[4]),
					listen(button, "click", /*addCard*/ ctx[2])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*front*/ 1 && input0.value !== /*front*/ ctx[0]) {
				set_input_value(input0, /*front*/ ctx[0]);
			}

			if (dirty & /*back*/ 2 && input1.value !== /*back*/ ctx[1]) {
				set_input_value(input1, /*back*/ ctx[1]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t1);
			if (detaching) detach(input0);
			if (detaching) detach(t2);
			if (detaching) detach(br0);
			if (detaching) detach(t3);
			if (detaching) detach(input1);
			if (detaching) detach(t4);
			if (detaching) detach(br1);
			if (detaching) detach(t5);
			if (detaching) detach(button);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $boxes;
	component_subscribe($$self, boxes, $$value => $$invalidate(5, $boxes = $$value));
	let front = "";
	let back = "";

	function addCard() {
		set_store_value(boxes, $boxes[0] = [...$boxes[0], new Card(front, back)], $boxes);
	}

	function input0_input_handler() {
		front = this.value;
		$$invalidate(0, front);
	}

	function input1_input_handler() {
		back = this.value;
		$$invalidate(1, back);
	}

	return [front, back, addCard, input0_input_handler, input1_input_handler];
}

class AddCard extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default AddCard;